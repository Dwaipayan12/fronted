{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apna\\\\DeltaLibrary\\\\Zoom\\\\fronted\\\\src\\\\pages\\\\VideoMeet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"../styles/videocomponent.css\";\nimport io from \"socket.io-client\";\nimport { Badge, IconButton, TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = \"http://localhost:8000\";\nvar connections = {};\nconst peerConfigConnections = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function VideoMeetComponenet() {\n  _s();\n  var socketRef = useRef();\n  let socketIdRef = useRef();\n  let localVideoref = useRef();\n  let [videoAvailable, setVideoAvailable] = useState(true);\n  let [audioAvailable, setAudioAvailable] = useState(true);\n  let [video, setVideo] = useState([]);\n  let [audio, setAudio] = useState();\n  let [screen, setScreen] = useState();\n  let [showModal, setModal] = useState(true);\n  let [screenAvailable, setScreenAvailable] = useState();\n  let [messages, setMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [newMessages, setNewMessages] = useState(3);\n  let [askForUsername, setAskForUsername] = useState(true);\n  let [username, setUsername] = useState(\"\");\n  const videoRef = useRef([]);\n  let [videos, setVideos] = useState([]);\n  const getPermissions = async () => {\n    try {\n      const videoPermission = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoPermission) {\n        setVideoAvailable(true);\n      } else {\n        setVideoAvailable(false);\n      }\n      const audioPermission = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      if (audioPermission) {\n        setAudioAvailable(true);\n      } else {\n        setAudioAvailable(false);\n      }\n      if (navigator.mediaDevices.getDisplayMedia) {\n        setScreenAvailable(true);\n      } else {\n        setScreenAvailable(false);\n      }\n      if (videoAvailable || audioAvailable) {\n        const userMediaStream = await navigator.mediaDevices.getUserMedia({\n          video: videoAvailable,\n          audio: audioAvailable\n        });\n        if (userMediaStream) {\n          window.localStream = userMediaStream;\n          if (localVideoref.current) {\n            localVideoref.current.srcObject = userMediaStream;\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    console.log(\"HELLO\");\n    getPermissions();\n  });\n  useEffect(() => {\n    if (video !== undefined && audio !== undefined) {\n      getUserMedia();\n      console.log(\"SET STATE HAS \", video, audio);\n    }\n  }, [video, audio]);\n  let getUserMedia = () => {\n    if (video && videoAvailable || audio && audioAvailable) {\n      navigator.mediaDevices.getUserMedia({\n        video: video,\n        audio: audio\n      }).then(getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n    } else {\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {}\n    }\n  };\n  let getUserMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        console.log(description);\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n  };\n  let getMedia = () => {\n    setVideo(videoAvailable);\n    setAudio(audioAvailable);\n    //connectToSocketServer();\n  };\n  let connect = () => {\n    setAskForUsername(false);\n    getMedia();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter into Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoref,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoMeetComponenet, \"eLRkjeWwmjF3m45AkCVlc4CFxV4=\");\n_c = VideoMeetComponenet;\nvar _c;\n$RefreshReg$(_c, \"VideoMeetComponenet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Badge","IconButton","TextField","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","connections","peerConfigConnections","VideoMeetComponenet","_s","socketRef","socketIdRef","localVideoref","videoAvailable","setVideoAvailable","audioAvailable","setAudioAvailable","video","setVideo","audio","setAudio","screen","setScreen","showModal","setModal","screenAvailable","setScreenAvailable","messages","setMessages","message","setMessage","newMessages","setNewMessages","askForUsername","setAskForUsername","username","setUsername","videoRef","videos","setVideos","getPermissions","videoPermission","navigator","mediaDevices","getUserMedia","audioPermission","getDisplayMedia","userMediaStream","window","localStream","current","srcObject","err","console","log","undefined","then","getUserMediaSuccess","stream","catch","e","tracks","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","localDescription","getMedia","connect","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","target","variant","onClick","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Apna/DeltaLibrary/Zoom/fronted/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport \"../styles/videocomponent.css\";\r\nimport io from \"socket.io-client\";\r\nimport { Badge, IconButton, TextField } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nconst server_url=\"http://localhost:8000\";\r\nvar connections = {};\r\nconst peerConfigConnections = {\r\n    \"iceServers\": [\r\n        { \"urls\": \"stun:stun.l.google.com:19302\" }\r\n    ]\r\n}\r\nexport default function VideoMeetComponenet(){\r\n    var socketRef = useRef();\r\n    let socketIdRef = useRef();\r\n\r\n    let localVideoref = useRef();\r\n\r\n    let [videoAvailable, setVideoAvailable] = useState(true);\r\n\r\n    let [audioAvailable, setAudioAvailable] = useState(true);\r\n\r\n    let [video, setVideo] = useState([]);\r\n\r\n    let [audio, setAudio] = useState();\r\n\r\n    let [screen, setScreen] = useState();\r\n\r\n    let [showModal, setModal] = useState(true);\r\n\r\n    let [screenAvailable, setScreenAvailable] = useState();\r\n\r\n    let [messages, setMessages] = useState([])\r\n\r\n    let [message, setMessage] = useState(\"\");\r\n\r\n    let [newMessages, setNewMessages] = useState(3);\r\n\r\n    let [askForUsername, setAskForUsername] = useState(true);\r\n\r\n    let [username, setUsername] = useState(\"\");\r\n\r\n    const videoRef = useRef([])\r\n\r\n    let [videos, setVideos] = useState([])\r\n\r\n    const getPermissions=async()=>{\r\n        try{\r\n            const videoPermission = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            if(videoPermission)\r\n            {\r\n                setVideoAvailable(true);\r\n            }\r\n            else{\r\n                setVideoAvailable(false);\r\n            }\r\n            const audioPermission = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                if(audioPermission)\r\n                {\r\n                    setAudioAvailable(true);\r\n                }\r\n                else{\r\n                    setAudioAvailable(false);\r\n                }\r\n                if (navigator.mediaDevices.getDisplayMedia) {\r\n                    setScreenAvailable(true);\r\n                } else {\r\n                    setScreenAvailable(false);\r\n                }\r\n                if (videoAvailable || audioAvailable) {\r\n                    const userMediaStream = await navigator.mediaDevices.getUserMedia({ video: videoAvailable, audio: audioAvailable });\r\n                    if (userMediaStream) {\r\n                        window.localStream = userMediaStream;\r\n                        if (localVideoref.current) {\r\n                            localVideoref.current.srcObject = userMediaStream;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        catch(err){\r\n         console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"HELLO\")\r\n        getPermissions();\r\n\r\n    })\r\n    useEffect(() => {\r\n        if (video !== undefined && audio !== undefined) {\r\n            getUserMedia();\r\n            console.log(\"SET STATE HAS \", video, audio);\r\n\r\n        }\r\n\r\n\r\n    }, [video, audio]);\r\n\r\n    let getUserMedia = () => {\r\n        if ((video && videoAvailable) || (audio && audioAvailable)) {\r\n            navigator.mediaDevices.getUserMedia({ video: video, audio: audio })\r\n                .then(getUserMediaSuccess)\r\n                .then((stream) => { })\r\n                .catch((e) => console.log(e))\r\n        } else {\r\n            try {\r\n                let tracks = localVideoref.current.srcObject.getTracks()\r\n                tracks.forEach(track => track.stop())\r\n            } catch (e) { }\r\n        }\r\n    }\r\n\r\n\r\n    let getUserMediaSuccess = (stream) => {\r\n        try {\r\n            window.localStream.getTracks().forEach(track => track.stop())\r\n        } catch (e) { console.log(e) }\r\n\r\n        window.localStream = stream\r\n        localVideoref.current.srcObject = stream\r\n\r\n        for (let id in connections) {\r\n            if (id === socketIdRef.current) continue\r\n\r\n            connections[id].addStream(window.localStream)\r\n\r\n            connections[id].createOffer().then((description) => {\r\n                console.log(description)\r\n                connections[id].setLocalDescription(description)\r\n                    .then(() => {\r\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    let getMedia = () => {\r\n        setVideo(videoAvailable);\r\n        setAudio(audioAvailable);\r\n        //connectToSocketServer();\r\n\r\n    }\r\n    let connect = () => {\r\n        setAskForUsername(false);\r\n        getMedia();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {askForUsername === true ?\r\n            <div>\r\n              <h2>Enter into Lobby</h2>\r\n              <TextField id=\"outlined-basic\" label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} variant=\"outlined\" />\r\n            <Button variant=\"contained\" onClick={connect}>Connect</Button>\r\n            <div>\r\n                <video ref={localVideoref} autoPlay muted></video>\r\n            </div>\r\n        </div>:<></>\r\n        }\r\n    </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}