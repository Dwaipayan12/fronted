{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apna\\\\DeltaLibrary\\\\Zoom\\\\fronted\\\\src\\\\pages\\\\authentication.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import \"../App.css\"\n// export default function Authentication(){\n//     return(\n//         <>\n//         <div>\n//             Authentication\n//         </div>\n//         </>\n//     )\n// }\nimport * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Stack from '@mui/material/Stack';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport getSignInSideTheme from './theme/getSignInSideTheme';\nimport SignInCard from './SignInCard';\nimport Content from './Content';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s();\n  const [mode, setMode] = React.useState('light');\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n  const defaultTheme = createTheme({\n    palette: {\n      mode\n    }\n  });\n  const SignInSideTheme = createTheme(getSignInSideTheme(mode));\n  // This code only runs on the client side, to determine the system color preference\n  React.useEffect(() => {\n    // Check if there is a preferred mode in localStorage\n    const savedMode = localStorage.getItem('themeMode');\n    if (savedMode) {\n      setMode(savedMode);\n    } else {\n      // If no preference is found, it uses system preference\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setMode(systemPrefersDark ? 'dark' : 'light');\n    }\n  }, []);\n  const toggleColorMode = () => {\n    const newMode = mode === 'dark' ? 'light' : 'dark';\n    setMode(newMode);\n    localStorage.setItem('themeMode', newMode); // Save the selected mode to localStorage\n  };\n  const toggleCustomTheme = () => {\n    setShowCustomTheme(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: showCustomTheme ? SignInSideTheme : defaultTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleCustomTheme: toggleCustomTheme,\n      showCustomTheme: showCustomTheme,\n      mode: mode,\n      toggleColorMode: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      component: \"main\",\n      sx: [{\n        justifyContent: 'space-between',\n        py: 8\n      }, theme => ({\n        backgroundImage: 'radial-gradient(ellipse at 70% 51%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n        backgroundSize: 'cover',\n        ...theme.applyStyles('dark', {\n          backgroundImage: 'radial-gradient(at 70% 51%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))'\n        })\n      })],\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column-reverse',\n          md: 'row'\n        },\n        sx: {\n          justifyContent: 'center',\n          gap: {\n            xs: 6,\n            sm: 12\n          },\n          height: {\n            xs: '100%',\n            md: '100dvh'\n          },\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Authentication, \"HkT7A4R1QSuXcsun9kNFAQDUgXQ=\");\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","CssBaseline","Stack","createTheme","ThemeProvider","getSignInSideTheme","SignInCard","Content","NavBar","jsxDEV","_jsxDEV","Authentication","_s","mode","setMode","useState","showCustomTheme","setShowCustomTheme","defaultTheme","palette","SignInSideTheme","useEffect","savedMode","localStorage","getItem","systemPrefersDark","window","matchMedia","matches","toggleColorMode","newMode","setItem","toggleCustomTheme","prev","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","component","sx","justifyContent","py","backgroundImage","backgroundSize","applyStyles","xs","md","gap","sm","height","p","_c","$RefreshReg$"],"sources":["C:/Apna/DeltaLibrary/Zoom/fronted/src/pages/authentication.jsx"],"sourcesContent":["\r\n// import React from 'react';\r\n// import \"../App.css\"\r\n// export default function Authentication(){\r\n//     return(\r\n//         <>\r\n//         <div>\r\n//             Authentication\r\n//         </div>\r\n//         </>\r\n//     )\r\n// }\r\nimport * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Stack from '@mui/material/Stack';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport getSignInSideTheme from './theme/getSignInSideTheme';\r\nimport SignInCard from './SignInCard';\r\nimport Content from './Content';\r\nimport NavBar from './NavBar';\r\n\r\nexport default function Authentication() {\r\n  const [mode, setMode] = React.useState('light');\r\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\r\n  const defaultTheme = createTheme({ palette: { mode } });\r\n  const SignInSideTheme = createTheme(getSignInSideTheme(mode));\r\n  // This code only runs on the client side, to determine the system color preference\r\n  React.useEffect(() => {\r\n    // Check if there is a preferred mode in localStorage\r\n    const savedMode = localStorage.getItem('themeMode');\r\n    if (savedMode) {\r\n      setMode(savedMode);\r\n    } else {\r\n      // If no preference is found, it uses system preference\r\n      const systemPrefersDark = window.matchMedia(\r\n        '(prefers-color-scheme: dark)',\r\n      ).matches;\r\n      setMode(systemPrefersDark ? 'dark' : 'light');\r\n    }\r\n  }, []);\r\n\r\n  const toggleColorMode = () => {\r\n    const newMode = mode === 'dark' ? 'light' : 'dark';\r\n    setMode(newMode);\r\n    localStorage.setItem('themeMode', newMode); // Save the selected mode to localStorage\r\n  };\r\n\r\n  const toggleCustomTheme = () => {\r\n    setShowCustomTheme((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={showCustomTheme ? SignInSideTheme : defaultTheme}>\r\n      <CssBaseline />\r\n      {/* you can delete this NavBar component since it's just no navigate to other pages */}\r\n      <NavBar\r\n        toggleCustomTheme={toggleCustomTheme}\r\n        showCustomTheme={showCustomTheme}\r\n        mode={mode}\r\n        toggleColorMode={toggleColorMode}\r\n      />\r\n      <Stack\r\n        direction=\"column\"\r\n        component=\"main\"\r\n        sx={[\r\n          {\r\n            justifyContent: 'space-between',\r\n            py: 8,\r\n          },\r\n          (theme) => ({\r\n            backgroundImage:\r\n              'radial-gradient(ellipse at 70% 51%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n            backgroundSize: 'cover',\r\n            ...theme.applyStyles('dark', {\r\n              backgroundImage:\r\n                'radial-gradient(at 70% 51%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n            }),\r\n          }),\r\n        ]}\r\n      >\r\n        <Stack\r\n          direction={{ xs: 'column-reverse', md: 'row' }}\r\n          sx={{\r\n            justifyContent: 'center',\r\n            gap: { xs: 6, sm: 12 },\r\n            height: { xs: '100%', md: '100dvh' },\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Content />\r\n          <SignInCard />\r\n        </Stack>\r\n      </Stack>\r\n    </ThemeProvider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}