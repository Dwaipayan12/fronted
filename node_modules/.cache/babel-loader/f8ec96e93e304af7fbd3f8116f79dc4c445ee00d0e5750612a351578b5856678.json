{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apna\\\\DeltaLibrary\\\\Zoom\\\\fronted\\\\src\\\\pages\\\\VideoMeet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"../styles/videocomponent.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = \"http://localhost:8000\";\nvar connections = {};\nconst peerConfigConnections = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function VideoMeetComponenet() {\n  _s();\n  var socketRef = useRef();\n  let socketIdRef = useRef();\n  let localVideoref = useRef();\n  let [videoAvailable, setVideoAvailable] = useState(true);\n  let [audioAvailable, setAudioAvailable] = useState(true);\n  let [video, setVideo] = useState([]);\n  let [audio, setAudio] = useState();\n  let [screen, setScreen] = useState();\n  let [showModal, setModal] = useState(true);\n  let [screenAvailable, setScreenAvailable] = useState();\n  let [messages, setMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [newMessages, setNewMessages] = useState(3);\n  let [askForUsername, setAskForUsername] = useState(true);\n  let [username, setUsername] = useState(\"\");\n  const videoRef = useRef([]);\n  let [videos, setVideos] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter into Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoMeetComponenet, \"BbXpVyzLlM2v9nTgGzYN+ZzIUVo=\");\n_c = VideoMeetComponenet;\nvar _c;\n$RefreshReg$(_c, \"VideoMeetComponenet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","connections","peerConfigConnections","VideoMeetComponenet","_s","socketRef","socketIdRef","localVideoref","videoAvailable","setVideoAvailable","audioAvailable","setAudioAvailable","video","setVideo","audio","setAudio","screen","setScreen","showModal","setModal","screenAvailable","setScreenAvailable","messages","setMessages","message","setMessage","newMessages","setNewMessages","askForUsername","setAskForUsername","username","setUsername","videoRef","videos","setVideos","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Apna/DeltaLibrary/Zoom/fronted/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport \"../styles/videocomponent.css\"\r\nconst server_url=\"http://localhost:8000\";\r\nvar connections = {};\r\nconst peerConfigConnections = {\r\n    \"iceServers\": [\r\n        { \"urls\": \"stun:stun.l.google.com:19302\" }\r\n    ]\r\n}\r\nexport default function VideoMeetComponenet(){\r\n    var socketRef = useRef();\r\n    let socketIdRef = useRef();\r\n\r\n    let localVideoref = useRef();\r\n\r\n    let [videoAvailable, setVideoAvailable] = useState(true);\r\n\r\n    let [audioAvailable, setAudioAvailable] = useState(true);\r\n\r\n    let [video, setVideo] = useState([]);\r\n\r\n    let [audio, setAudio] = useState();\r\n\r\n    let [screen, setScreen] = useState();\r\n\r\n    let [showModal, setModal] = useState(true);\r\n\r\n    let [screenAvailable, setScreenAvailable] = useState();\r\n\r\n    let [messages, setMessages] = useState([])\r\n\r\n    let [message, setMessage] = useState(\"\");\r\n\r\n    let [newMessages, setNewMessages] = useState(3);\r\n\r\n    let [askForUsername, setAskForUsername] = useState(true);\r\n\r\n    let [username, setUsername] = useState(\"\");\r\n\r\n    const videoRef = useRef([])\r\n\r\n    let [videos, setVideos] = useState([])\r\n\r\n    return(\r\n        <div>\r\n            {askForUsername === true ?\r\n            <div>\r\n              <h2>Enter into Lobby</h2>\r\n        </div>:<></>}\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACrC,MAAMC,UAAU,GAAC,uBAAuB;AACxC,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,MAAMC,qBAAqB,GAAG;EAC1B,YAAY,EAAE,CACV;IAAE,MAAM,EAAE;EAA+B,CAAC;AAElD,CAAC;AACD,eAAe,SAASC,mBAAmBA,CAAA,EAAE;EAAAC,EAAA;EACzC,IAAIC,SAAS,GAAGX,MAAM,CAAC,CAAC;EACxB,IAAIY,WAAW,GAAGZ,MAAM,CAAC,CAAC;EAE1B,IAAIa,aAAa,GAAGb,MAAM,CAAC,CAAC;EAE5B,IAAI,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAI,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAElC,IAAI,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAAC;EAEpC,IAAI,CAACuB,SAAS,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1C,IAAI,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,CAAC;EAEtD,IAAI,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAI,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAI,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAE/C,IAAI,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMqC,QAAQ,GAAGtC,MAAM,CAAC,EAAE,CAAC;EAE3B,IAAI,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAEtC,oBACIE,OAAA;IAAAsC,QAAA,EACKP,cAAc,KAAK,IAAI,gBACxB/B,OAAA;MAAAsC,QAAA,eACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAAC1C,OAAA,CAAAE,SAAA,mBAAI;EAAC;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACnC,EAAA,CA1CuBD,mBAAmB;AAAAqC,EAAA,GAAnBrC,mBAAmB;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}